!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
PACKAGE	Makefile	/^PACKAGE := $(shell grep '^Package:' DESCRIPTION | sed -E 's\/^Package:[[:space:]]+\/\/')$/;"	m
RSCRIPT	Makefile	/^RSCRIPT = Rscript --no-init-file$/;"	m
TMB_LIB_INIT	src/Surv_SpaceAgeTime.cpp	1;"	d	file:
invlogit_vec	src/Surv_SpaceAgeTime.cpp	/^vector invlogit_vec(vector x){$/;"	f	signature:(vector x)
geninvlogit	src/Surv_SpaceAgeTime.cpp	/^Type geninvlogit(Type x, Type a, Type b){$/;"	f	signature:(Type x, Type a, Type b)
operator ()	src/Surv_SpaceAgeTime.cpp	/^Type objective_function<Type>::operator() ()$/;"	f	class:objective_function	signature:()
objective_function::operator ()	src/Surv_SpaceAgeTime.cpp	/^Type objective_function<Type>::operator() ()$/;"	f	class:objective_function	signature:()
TMB_LIB_INIT	src/Surv_SpaceAgeTime_ByType_withUnknownType.cpp	1;"	d	file:
invlogit_vec	src/Surv_SpaceAgeTime_ByType_withUnknownType.cpp	/^vector invlogit_vec(vector x){$/;"	f	signature:(vector x)
geninvlogit	src/Surv_SpaceAgeTime_ByType_withUnknownType.cpp	/^Type geninvlogit(Type x, Type a, Type b){$/;"	f	signature:(Type x, Type a, Type b)
operator ()	src/Surv_SpaceAgeTime_ByType_withUnknownType.cpp	/^Type objective_function<Type>::operator() ()$/;"	f	class:objective_function	signature:()
objective_function::operator ()	src/Surv_SpaceAgeTime_ByType_withUnknownType.cpp	/^Type objective_function<Type>::operator() ()$/;"	f	class:objective_function	signature:()
# https	.github/workflows/R-CMD-check.yaml	/^# https:\/\/community.rstudio.com\/new-topic?category=Package%20development&tags=github-actions$/;"	k
on	.github/workflows/R-CMD-check.yaml	/^on:$/;"	k
push	.github/workflows/R-CMD-check.yaml	/^  push:$/;"	k
branches	.github/workflows/R-CMD-check.yaml	/^    branches:$/;"	k
pull_request	.github/workflows/R-CMD-check.yaml	/^  pull_request:$/;"	k
branches	.github/workflows/R-CMD-check.yaml	/^    branches:$/;"	k
name	.github/workflows/R-CMD-check.yaml	/^name: R-CMD-check$/;"	k
jobs	.github/workflows/R-CMD-check.yaml	/^jobs:$/;"	k
R-CMD-check	.github/workflows/R-CMD-check.yaml	/^  R-CMD-check:$/;"	k
runs-on	.github/workflows/R-CMD-check.yaml	/^    runs-on: ${{ matrix.config.os }}$/;"	k
name	.github/workflows/R-CMD-check.yaml	/^    name: ${{ matrix.config.os }} (${{ matrix.config.r }})$/;"	k
strategy	.github/workflows/R-CMD-check.yaml	/^    strategy:$/;"	k
fail-fast	.github/workflows/R-CMD-check.yaml	/^      fail-fast: false$/;"	k
matrix	.github/workflows/R-CMD-check.yaml	/^      matrix:$/;"	k
config	.github/workflows/R-CMD-check.yaml	/^        config:$/;"	k
- {os: windows-latest, r	.github/workflows/R-CMD-check.yaml	/^          - {os: windows-latest, r: 'release'}$/;"	k
- {os: macOS-latest, r	.github/workflows/R-CMD-check.yaml	/^          - {os: macOS-latest, r: 'release'}$/;"	k
- {os: ubuntu-20.04, r: 'release', rspm: "https	.github/workflows/R-CMD-check.yaml	/^          - {os: ubuntu-20.04, r: 'release', rspm: "https:\/\/packagemanager.rstudio.com\/cran\/__linux__\/focal\/latest"}$/;"	k
- {os: ubuntu-20.04, r: 'devel', rspm: "https	.github/workflows/R-CMD-check.yaml	/^          - {os: ubuntu-20.04, r: 'devel', rspm: "https:\/\/packagemanager.rstudio.com\/cran\/__linux__\/focal\/latest"}$/;"	k
env	.github/workflows/R-CMD-check.yaml	/^    env:$/;"	k
R_REMOTES_NO_ERRORS_FROM_WARNINGS	.github/workflows/R-CMD-check.yaml	/^      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true$/;"	k
RSPM	.github/workflows/R-CMD-check.yaml	/^      RSPM: ${{ matrix.config.rspm }}$/;"	k
GITHUB_PAT	.github/workflows/R-CMD-check.yaml	/^      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}$/;"	k
steps	.github/workflows/R-CMD-check.yaml	/^    steps:$/;"	k
- uses	.github/workflows/R-CMD-check.yaml	/^      - uses: actions\/checkout@v2$/;"	k
- uses	.github/workflows/R-CMD-check.yaml	/^      - uses: r-lib\/actions\/setup-r@v1$/;"	k
with	.github/workflows/R-CMD-check.yaml	/^        with:$/;"	k
r-version	.github/workflows/R-CMD-check.yaml	/^          r-version: ${{ matrix.config.r }}$/;"	k
- uses	.github/workflows/R-CMD-check.yaml	/^      - uses: r-lib\/actions\/setup-pandoc@v1$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Query dependencies$/;"	k
run	.github/workflows/R-CMD-check.yaml	/^        run: |$/;"	k
saveRDS(remotes:	.github/workflows/R-CMD-check.yaml	/^          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github\/depends.Rds", version = 2)$/;"	k
shell	.github/workflows/R-CMD-check.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Cache R packages$/;"	k
if	.github/workflows/R-CMD-check.yaml	/^        if: runner.os != 'Windows'$/;"	k
uses	.github/workflows/R-CMD-check.yaml	/^        uses: actions\/cache@v2$/;"	k
with	.github/workflows/R-CMD-check.yaml	/^        with:$/;"	k
path	.github/workflows/R-CMD-check.yaml	/^          path: ${{ env.R_LIBS_USER }}$/;"	k
key	.github/workflows/R-CMD-check.yaml	/^          key: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-${{ hashFiles('.github\/depends.Rds') }}$/;"	k
restore-keys	.github/workflows/R-CMD-check.yaml	/^          restore-keys: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Install system dependencies$/;"	k
if	.github/workflows/R-CMD-check.yaml	/^        if: runner.os == 'Linux'$/;"	k
run	.github/workflows/R-CMD-check.yaml	/^        run: |$/;"	k
done < <(Rscript -e 'writeLines(remotes:	.github/workflows/R-CMD-check.yaml	/^          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Install dependencies$/;"	k
run	.github/workflows/R-CMD-check.yaml	/^        run: |$/;"	k
remotes:	.github/workflows/R-CMD-check.yaml	/^          remotes::install_deps(dependencies = TRUE)$/;"	k
remotes:	.github/workflows/R-CMD-check.yaml	/^          remotes::install_cran("rcmdcheck")$/;"	k
shell	.github/workflows/R-CMD-check.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Check$/;"	k
env	.github/workflows/R-CMD-check.yaml	/^        env:$/;"	k
_R_CHECK_CRAN_INCOMING_REMOTE_	.github/workflows/R-CMD-check.yaml	/^          _R_CHECK_CRAN_INCOMING_REMOTE_: false$/;"	k
run	.github/workflows/R-CMD-check.yaml	/^        run: |$/;"	k
rcmdcheck:	.github/workflows/R-CMD-check.yaml	/^          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")$/;"	k
shell	.github/workflows/R-CMD-check.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/R-CMD-check.yaml	/^      - name: Upload check results$/;"	k
if	.github/workflows/R-CMD-check.yaml	/^        if: failure()$/;"	k
uses	.github/workflows/R-CMD-check.yaml	/^        uses: actions\/upload-artifact@main$/;"	k
with	.github/workflows/R-CMD-check.yaml	/^        with:$/;"	k
name	.github/workflows/R-CMD-check.yaml	/^          name: ${{ runner.os }}-r${{ matrix.config.r }}-results$/;"	k
path	.github/workflows/R-CMD-check.yaml	/^          path: check$/;"	k
on	.github/workflows/pkgdown.yaml	/^on:$/;"	k
push	.github/workflows/pkgdown.yaml	/^  push:$/;"	k
branches	.github/workflows/pkgdown.yaml	/^    branches:$/;"	k
name	.github/workflows/pkgdown.yaml	/^name: pkgdown$/;"	k
jobs	.github/workflows/pkgdown.yaml	/^jobs:$/;"	k
pkgdown	.github/workflows/pkgdown.yaml	/^  pkgdown:$/;"	k
runs-on	.github/workflows/pkgdown.yaml	/^    runs-on: macOS-latest$/;"	k
env	.github/workflows/pkgdown.yaml	/^    env:$/;"	k
GITHUB_PAT	.github/workflows/pkgdown.yaml	/^      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}$/;"	k
steps	.github/workflows/pkgdown.yaml	/^    steps:$/;"	k
- uses	.github/workflows/pkgdown.yaml	/^      - uses: actions\/checkout@v2$/;"	k
- uses	.github/workflows/pkgdown.yaml	/^      - uses: r-lib\/actions\/setup-r@v1$/;"	k
- uses	.github/workflows/pkgdown.yaml	/^      - uses: r-lib\/actions\/setup-pandoc@v1$/;"	k
- name	.github/workflows/pkgdown.yaml	/^      - name: Query dependencies$/;"	k
run	.github/workflows/pkgdown.yaml	/^        run: |$/;"	k
saveRDS(remotes:	.github/workflows/pkgdown.yaml	/^          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github\/depends.Rds", version = 2)$/;"	k
shell	.github/workflows/pkgdown.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/pkgdown.yaml	/^      - name: Cache R packages$/;"	k
uses	.github/workflows/pkgdown.yaml	/^        uses: actions\/cache@v2$/;"	k
with	.github/workflows/pkgdown.yaml	/^        with:$/;"	k
path	.github/workflows/pkgdown.yaml	/^          path: ${{ env.R_LIBS_USER }}$/;"	k
key	.github/workflows/pkgdown.yaml	/^          key: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-${{ hashFiles('.github\/depends.Rds') }}$/;"	k
restore-keys	.github/workflows/pkgdown.yaml	/^          restore-keys: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-$/;"	k
- name	.github/workflows/pkgdown.yaml	/^      - name: Install dependencies$/;"	k
run	.github/workflows/pkgdown.yaml	/^        run: |$/;"	k
remotes:	.github/workflows/pkgdown.yaml	/^          remotes::install_deps(dependencies = TRUE)$/;"	k
shell	.github/workflows/pkgdown.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/pkgdown.yaml	/^      - name: Install package$/;"	k
run	.github/workflows/pkgdown.yaml	/^        run: R CMD INSTALL .$/;"	k
- name	.github/workflows/pkgdown.yaml	/^      - name: Deploy package$/;"	k
run	.github/workflows/pkgdown.yaml	/^        run: |$/;"	k
Rscript -e 'pkgdown:	.github/workflows/pkgdown.yaml	/^          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'$/;"	k
on	.github/workflows/test-coverage.yaml	/^on:$/;"	k
push	.github/workflows/test-coverage.yaml	/^  push:$/;"	k
branches	.github/workflows/test-coverage.yaml	/^    branches:$/;"	k
pull_request	.github/workflows/test-coverage.yaml	/^  pull_request:$/;"	k
branches	.github/workflows/test-coverage.yaml	/^    branches:$/;"	k
name	.github/workflows/test-coverage.yaml	/^name: test-coverage$/;"	k
jobs	.github/workflows/test-coverage.yaml	/^jobs:$/;"	k
test-coverage	.github/workflows/test-coverage.yaml	/^  test-coverage:$/;"	k
runs-on	.github/workflows/test-coverage.yaml	/^    runs-on: macOS-latest$/;"	k
env	.github/workflows/test-coverage.yaml	/^    env:$/;"	k
GITHUB_PAT	.github/workflows/test-coverage.yaml	/^      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}$/;"	k
steps	.github/workflows/test-coverage.yaml	/^    steps:$/;"	k
- uses	.github/workflows/test-coverage.yaml	/^      - uses: actions\/checkout@v2$/;"	k
- uses	.github/workflows/test-coverage.yaml	/^      - uses: r-lib\/actions\/setup-r@v1$/;"	k
- uses	.github/workflows/test-coverage.yaml	/^      - uses: r-lib\/actions\/setup-pandoc@v1$/;"	k
- name	.github/workflows/test-coverage.yaml	/^      - name: Query dependencies$/;"	k
run	.github/workflows/test-coverage.yaml	/^        run: |$/;"	k
saveRDS(remotes:	.github/workflows/test-coverage.yaml	/^          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github\/depends.Rds", version = 2)$/;"	k
shell	.github/workflows/test-coverage.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/test-coverage.yaml	/^      - name: Cache R packages$/;"	k
uses	.github/workflows/test-coverage.yaml	/^        uses: actions\/cache@v2$/;"	k
with	.github/workflows/test-coverage.yaml	/^        with:$/;"	k
path	.github/workflows/test-coverage.yaml	/^          path: ${{ env.R_LIBS_USER }}$/;"	k
key	.github/workflows/test-coverage.yaml	/^          key: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-${{ hashFiles('.github\/depends.Rds') }}$/;"	k
restore-keys	.github/workflows/test-coverage.yaml	/^          restore-keys: ${{ runner.os }}-${{ hashFiles('.github\/R-version') }}-1-$/;"	k
- name	.github/workflows/test-coverage.yaml	/^      - name: Install dependencies$/;"	k
run	.github/workflows/test-coverage.yaml	/^        run: |$/;"	k
remotes:	.github/workflows/test-coverage.yaml	/^          remotes::install_deps(dependencies = TRUE)$/;"	k
remotes:	.github/workflows/test-coverage.yaml	/^          remotes::install_cran("covr")$/;"	k
shell	.github/workflows/test-coverage.yaml	/^        shell: Rscript {0}$/;"	k
- name	.github/workflows/test-coverage.yaml	/^      - name: Test coverage$/;"	k
run: covr:	.github/workflows/test-coverage.yaml	/^        run: covr::codecov()$/;"	k
shell	.github/workflows/test-coverage.yaml	/^        shell: Rscript {0}$/;"	k
# threemc	README.md	/^# threemc$/;"	h
## Installation	README.md	/^## Installation$/;"	h
## License	README.md	/^## License$/;"	h
# threemc 0.1.1	NEWS.md	/^# threemc 0.1.1$/;"	h
# threemc 0.1.2	NEWS.md	/^# threemc 0.1.2 $/;"	h
